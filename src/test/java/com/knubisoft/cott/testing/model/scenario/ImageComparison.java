//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2022.08.27 at 06:11:17 PM EEST 
//


package com.knubisoft.cott.testing.model.scenario;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for imageComparison complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="imageComparison"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.knubisoft.com/cott/testing/model/scenario}abstractCommand"&gt;
 *       &lt;choice&gt;
 *         &lt;element name="takeScreenshotAndCompare" type="{http://www.w3.org/2001/XMLSchema}anyType"/&gt;
 *         &lt;element name="extractFromElementAndCompare" type="{http://www.knubisoft.com/cott/testing/model/scenario}extractFromElementAndCompare"/&gt;
 *       &lt;/choice&gt;
 *       &lt;attribute name="expectedImage" use="required" type="{http://www.knubisoft.com/cott/testing/model/scenario}nonEmptyString" /&gt;
 *       &lt;attribute name="highlightDifferences" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "imageComparison", propOrder = {
    "takeScreenshotAndCompare",
    "extractFromElementAndCompare"
})
public class ImageComparison
    extends AbstractCommand
{

    protected Object takeScreenshotAndCompare;
    protected ExtractFromElementAndCompare extractFromElementAndCompare;
    @XmlAttribute(name = "expectedImage", required = true)
    protected String expectedImage;
    @XmlAttribute(name = "highlightDifferences")
    protected Boolean highlightDifferences;

    /**
     * Gets the value of the takeScreenshotAndCompare property.
     * 
     * @return
     *     possible object is
     *     {@link Object }
     *     
     */
    public Object getTakeScreenshotAndCompare() {
        return takeScreenshotAndCompare;
    }

    /**
     * Sets the value of the takeScreenshotAndCompare property.
     * 
     * @param value
     *     allowed object is
     *     {@link Object }
     *     
     */
    public void setTakeScreenshotAndCompare(Object value) {
        this.takeScreenshotAndCompare = value;
    }

    /**
     * Gets the value of the extractFromElementAndCompare property.
     * 
     * @return
     *     possible object is
     *     {@link ExtractFromElementAndCompare }
     *     
     */
    public ExtractFromElementAndCompare getExtractFromElementAndCompare() {
        return extractFromElementAndCompare;
    }

    /**
     * Sets the value of the extractFromElementAndCompare property.
     * 
     * @param value
     *     allowed object is
     *     {@link ExtractFromElementAndCompare }
     *     
     */
    public void setExtractFromElementAndCompare(ExtractFromElementAndCompare value) {
        this.extractFromElementAndCompare = value;
    }

    /**
     * Gets the value of the expectedImage property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getExpectedImage() {
        return expectedImage;
    }

    /**
     * Sets the value of the expectedImage property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExpectedImage(String value) {
        this.expectedImage = value;
    }

    /**
     * Gets the value of the highlightDifferences property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isHighlightDifferences() {
        if (highlightDifferences == null) {
            return false;
        } else {
            return highlightDifferences;
        }
    }

    /**
     * Sets the value of the highlightDifferences property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setHighlightDifferences(Boolean value) {
        this.highlightDifferences = value;
    }

}
