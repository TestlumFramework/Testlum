//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2022.05.31 at 08:19:32 PM EEST 
//


package com.knubisoft.e2e.testing.model.global_config;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.knubisoft.e2e.testing.model.global_config package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.knubisoft.e2e.testing.model.global_config
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link GlobalTestConfiguration }
     * 
     */
    public GlobalTestConfiguration createGlobalTestConfiguration() {
        return new GlobalTestConfiguration();
    }

    /**
     * Create an instance of {@link FilterTags }
     * 
     */
    public FilterTags createFilterTags() {
        return new FilterTags();
    }

    /**
     * Create an instance of {@link Ui }
     * 
     */
    public Ui createUi() {
        return new Ui();
    }

    /**
     * Create an instance of {@link Integrations }
     * 
     */
    public Integrations createIntegrations() {
        return new Integrations();
    }

    /**
     * Create an instance of {@link Hikari }
     * 
     */
    public Hikari createHikari() {
        return new Hikari();
    }

    /**
     * Create an instance of {@link Postgreses }
     * 
     */
    public Postgreses createPostgreses() {
        return new Postgreses();
    }

    /**
     * Create an instance of {@link Postgres }
     * 
     */
    public Postgres createPostgres() {
        return new Postgres();
    }

    /**
     * Create an instance of {@link Clickhouses }
     * 
     */
    public Clickhouses createClickhouses() {
        return new Clickhouses();
    }

    /**
     * Create an instance of {@link Clickhouse }
     * 
     */
    public Clickhouse createClickhouse() {
        return new Clickhouse();
    }

    /**
     * Create an instance of {@link Mysqls }
     * 
     */
    public Mysqls createMysqls() {
        return new Mysqls();
    }

    /**
     * Create an instance of {@link Mysql }
     * 
     */
    public Mysql createMysql() {
        return new Mysql();
    }

    /**
     * Create an instance of {@link Oracles }
     * 
     */
    public Oracles createOracles() {
        return new Oracles();
    }

    /**
     * Create an instance of {@link Oracle }
     * 
     */
    public Oracle createOracle() {
        return new Oracle();
    }

    /**
     * Create an instance of {@link Redises }
     * 
     */
    public Redises createRedises() {
        return new Redises();
    }

    /**
     * Create an instance of {@link Redis }
     * 
     */
    public Redis createRedis() {
        return new Redis();
    }

    /**
     * Create an instance of {@link Mongos }
     * 
     */
    public Mongos createMongos() {
        return new Mongos();
    }

    /**
     * Create an instance of {@link Mongo }
     * 
     */
    public Mongo createMongo() {
        return new Mongo();
    }

    /**
     * Create an instance of {@link S3S }
     * 
     */
    public S3S createS3S() {
        return new S3S();
    }

    /**
     * Create an instance of {@link S3 }
     * 
     */
    public S3 createS3() {
        return new S3();
    }

    /**
     * Create an instance of {@link Sqss }
     * 
     */
    public Sqss createSqss() {
        return new Sqss();
    }

    /**
     * Create an instance of {@link Sqs }
     * 
     */
    public Sqs createSqs() {
        return new Sqs();
    }

    /**
     * Create an instance of {@link Kafkas }
     * 
     */
    public Kafkas createKafkas() {
        return new Kafkas();
    }

    /**
     * Create an instance of {@link Kafka }
     * 
     */
    public Kafka createKafka() {
        return new Kafka();
    }

    /**
     * Create an instance of {@link Rabbitmqs }
     * 
     */
    public Rabbitmqs createRabbitmqs() {
        return new Rabbitmqs();
    }

    /**
     * Create an instance of {@link Rabbitmq }
     * 
     */
    public Rabbitmq createRabbitmq() {
        return new Rabbitmq();
    }

    /**
     * Create an instance of {@link Dynamos }
     * 
     */
    public Dynamos createDynamos() {
        return new Dynamos();
    }

    /**
     * Create an instance of {@link Dynamo }
     * 
     */
    public Dynamo createDynamo() {
        return new Dynamo();
    }

    /**
     * Create an instance of {@link Elasticsearches }
     * 
     */
    public Elasticsearches createElasticsearches() {
        return new Elasticsearches();
    }

    /**
     * Create an instance of {@link Elasticsearch }
     * 
     */
    public Elasticsearch createElasticsearch() {
        return new Elasticsearch();
    }

    /**
     * Create an instance of {@link Sendgrids }
     * 
     */
    public Sendgrids createSendgrids() {
        return new Sendgrids();
    }

    /**
     * Create an instance of {@link Sendgrid }
     * 
     */
    public Sendgrid createSendgrid() {
        return new Sendgrid();
    }

    /**
     * Create an instance of {@link Seses }
     * 
     */
    public Seses createSeses() {
        return new Seses();
    }

    /**
     * Create an instance of {@link Ses }
     * 
     */
    public Ses createSes() {
        return new Ses();
    }

    /**
     * Create an instance of {@link WebDriverOptions }
     * 
     */
    public WebDriverOptions createWebDriverOptions() {
        return new WebDriverOptions();
    }

    /**
     * Create an instance of {@link WebDriverVersion }
     * 
     */
    public WebDriverVersion createWebDriverVersion() {
        return new WebDriverVersion();
    }

    /**
     * Create an instance of {@link WebDriverSettings }
     * 
     */
    public WebDriverSettings createWebDriverSettings() {
        return new WebDriverSettings();
    }

    /**
     * Create an instance of {@link TakeScreenshotOfEachUiCommand }
     * 
     */
    public TakeScreenshotOfEachUiCommand createTakeScreenshotOfEachUiCommand() {
        return new TakeScreenshotOfEachUiCommand();
    }

    /**
     * Create an instance of {@link WebElementAutowait }
     * 
     */
    public WebElementAutowait createWebElementAutowait() {
        return new WebElementAutowait();
    }

    /**
     * Create an instance of {@link WebDriverRunMode }
     * 
     */
    public WebDriverRunMode createWebDriverRunMode() {
        return new WebDriverRunMode();
    }

    /**
     * Create an instance of {@link Remote }
     * 
     */
    public Remote createRemote() {
        return new Remote();
    }

    /**
     * Create an instance of {@link Locally }
     * 
     */
    public Locally createLocally() {
        return new Locally();
    }

    /**
     * Create an instance of {@link BrowserVersions }
     * 
     */
    public BrowserVersions createBrowserVersions() {
        return new BrowserVersions();
    }

    /**
     * Create an instance of {@link Chrome }
     * 
     */
    public Chrome createChrome() {
        return new Chrome();
    }

    /**
     * Create an instance of {@link Firefox }
     * 
     */
    public Firefox createFirefox() {
        return new Firefox();
    }

    /**
     * Create an instance of {@link Safari }
     * 
     */
    public Safari createSafari() {
        return new Safari();
    }

    /**
     * Create an instance of {@link Edge }
     * 
     */
    public Edge createEdge() {
        return new Edge();
    }

    /**
     * Create an instance of {@link Opera }
     * 
     */
    public Opera createOpera() {
        return new Opera();
    }

    /**
     * Create an instance of {@link Apis }
     * 
     */
    public Apis createApis() {
        return new Apis();
    }

    /**
     * Create an instance of {@link Api }
     * 
     */
    public Api createApi() {
        return new Api();
    }

}
