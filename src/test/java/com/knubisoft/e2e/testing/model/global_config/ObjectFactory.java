//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2022.06.20 at 09:07:43 PM EEST 
//


package com.knubisoft.e2e.testing.model.global_config;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.knubisoft.e2e.testing.model.global_config package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.knubisoft.e2e.testing.model.global_config
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link GlobalTestConfiguration }
     * 
     */
    public GlobalTestConfiguration createGlobalTestConfiguration() {
        return new GlobalTestConfiguration();
    }

    /**
     * Create an instance of {@link FilterTags }
     * 
     */
    public FilterTags createFilterTags() {
        return new FilterTags();
    }

    /**
     * Create an instance of {@link Ui }
     * 
     */
    public Ui createUi() {
        return new Ui();
    }

    /**
     * Create an instance of {@link Integrations }
     * 
     */
    public Integrations createIntegrations() {
        return new Integrations();
    }

    /**
     * Create an instance of {@link Hikari }
     * 
     */
    public Hikari createHikari() {
        return new Hikari();
    }

    /**
     * Create an instance of {@link PostgresIntegration }
     * 
     */
    public PostgresIntegration createPostgresIntegration() {
        return new PostgresIntegration();
    }

    /**
     * Create an instance of {@link Postgres }
     * 
     */
    public Postgres createPostgres() {
        return new Postgres();
    }

    /**
     * Create an instance of {@link ClickhouseIntegration }
     * 
     */
    public ClickhouseIntegration createClickhouseIntegration() {
        return new ClickhouseIntegration();
    }

    /**
     * Create an instance of {@link Clickhouse }
     * 
     */
    public Clickhouse createClickhouse() {
        return new Clickhouse();
    }

    /**
     * Create an instance of {@link MysqlIntegration }
     * 
     */
    public MysqlIntegration createMysqlIntegration() {
        return new MysqlIntegration();
    }

    /**
     * Create an instance of {@link Mysql }
     * 
     */
    public Mysql createMysql() {
        return new Mysql();
    }

    /**
     * Create an instance of {@link OracleIntegration }
     * 
     */
    public OracleIntegration createOracleIntegration() {
        return new OracleIntegration();
    }

    /**
     * Create an instance of {@link Oracle }
     * 
     */
    public Oracle createOracle() {
        return new Oracle();
    }

    /**
     * Create an instance of {@link RedisIntegration }
     * 
     */
    public RedisIntegration createRedisIntegration() {
        return new RedisIntegration();
    }

    /**
     * Create an instance of {@link Redis }
     * 
     */
    public Redis createRedis() {
        return new Redis();
    }

    /**
     * Create an instance of {@link MongoIntegration }
     * 
     */
    public MongoIntegration createMongoIntegration() {
        return new MongoIntegration();
    }

    /**
     * Create an instance of {@link Mongo }
     * 
     */
    public Mongo createMongo() {
        return new Mongo();
    }

    /**
     * Create an instance of {@link S3Integration }
     * 
     */
    public S3Integration createS3Integration() {
        return new S3Integration();
    }

    /**
     * Create an instance of {@link S3 }
     * 
     */
    public S3 createS3() {
        return new S3();
    }

    /**
     * Create an instance of {@link SqsIntegration }
     * 
     */
    public SqsIntegration createSqsIntegration() {
        return new SqsIntegration();
    }

    /**
     * Create an instance of {@link Sqs }
     * 
     */
    public Sqs createSqs() {
        return new Sqs();
    }

    /**
     * Create an instance of {@link KafkaIntegration }
     * 
     */
    public KafkaIntegration createKafkaIntegration() {
        return new KafkaIntegration();
    }

    /**
     * Create an instance of {@link Kafka }
     * 
     */
    public Kafka createKafka() {
        return new Kafka();
    }

    /**
     * Create an instance of {@link RabbitmqIntegration }
     * 
     */
    public RabbitmqIntegration createRabbitmqIntegration() {
        return new RabbitmqIntegration();
    }

    /**
     * Create an instance of {@link Rabbitmq }
     * 
     */
    public Rabbitmq createRabbitmq() {
        return new Rabbitmq();
    }

    /**
     * Create an instance of {@link DynamoIntegration }
     * 
     */
    public DynamoIntegration createDynamoIntegration() {
        return new DynamoIntegration();
    }

    /**
     * Create an instance of {@link Dynamo }
     * 
     */
    public Dynamo createDynamo() {
        return new Dynamo();
    }

    /**
     * Create an instance of {@link ElasticsearchIntegration }
     * 
     */
    public ElasticsearchIntegration createElasticsearchIntegration() {
        return new ElasticsearchIntegration();
    }

    /**
     * Create an instance of {@link Elasticsearch }
     * 
     */
    public Elasticsearch createElasticsearch() {
        return new Elasticsearch();
    }

    /**
     * Create an instance of {@link SendgridIntegration }
     * 
     */
    public SendgridIntegration createSendgridIntegration() {
        return new SendgridIntegration();
    }

    /**
     * Create an instance of {@link Sendgrid }
     * 
     */
    public Sendgrid createSendgrid() {
        return new Sendgrid();
    }

    /**
     * Create an instance of {@link SesIntegration }
     * 
     */
    public SesIntegration createSesIntegration() {
        return new SesIntegration();
    }

    /**
     * Create an instance of {@link Ses }
     * 
     */
    public Ses createSes() {
        return new Ses();
    }

    /**
     * Create an instance of {@link BrowserSettings }
     * 
     */
    public BrowserSettings createBrowserSettings() {
        return new BrowserSettings();
    }

    /**
     * Create an instance of {@link Browsers }
     * 
     */
    public Browsers createBrowsers() {
        return new Browsers();
    }

    /**
     * Create an instance of {@link BrowserType }
     * 
     */
    public BrowserType createBrowserType() {
        return new BrowserType();
    }

    /**
     * Create an instance of {@link LocalBrowser }
     * 
     */
    public LocalBrowser createLocalBrowser() {
        return new LocalBrowser();
    }

    /**
     * Create an instance of {@link BrowserInDocker }
     * 
     */
    public BrowserInDocker createBrowserInDocker() {
        return new BrowserInDocker();
    }

    /**
     * Create an instance of {@link RemoteBrowser }
     * 
     */
    public RemoteBrowser createRemoteBrowser() {
        return new RemoteBrowser();
    }

    /**
     * Create an instance of {@link ScreenRecording }
     * 
     */
    public ScreenRecording createScreenRecording() {
        return new ScreenRecording();
    }

    /**
     * Create an instance of {@link BrowserOptionsArguments }
     * 
     */
    public BrowserOptionsArguments createBrowserOptionsArguments() {
        return new BrowserOptionsArguments();
    }

    /**
     * Create an instance of {@link Capabilities }
     * 
     */
    public Capabilities createCapabilities() {
        return new Capabilities();
    }

    /**
     * Create an instance of {@link Capability }
     * 
     */
    public Capability createCapability() {
        return new Capability();
    }

    /**
     * Create an instance of {@link TakeScreenshotOfEachUiCommand }
     * 
     */
    public TakeScreenshotOfEachUiCommand createTakeScreenshotOfEachUiCommand() {
        return new TakeScreenshotOfEachUiCommand();
    }

    /**
     * Create an instance of {@link WebElementAutowait }
     * 
     */
    public WebElementAutowait createWebElementAutowait() {
        return new WebElementAutowait();
    }

    /**
     * Create an instance of {@link Chrome }
     * 
     */
    public Chrome createChrome() {
        return new Chrome();
    }

    /**
     * Create an instance of {@link Firefox }
     * 
     */
    public Firefox createFirefox() {
        return new Firefox();
    }

    /**
     * Create an instance of {@link Edge }
     * 
     */
    public Edge createEdge() {
        return new Edge();
    }

    /**
     * Create an instance of {@link Opera }
     * 
     */
    public Opera createOpera() {
        return new Opera();
    }

    /**
     * Create an instance of {@link Safari }
     * 
     */
    public Safari createSafari() {
        return new Safari();
    }

    /**
     * Create an instance of {@link Apis }
     * 
     */
    public Apis createApis() {
        return new Apis();
    }

    /**
     * Create an instance of {@link Api }
     * 
     */
    public Api createApi() {
        return new Api();
    }

}
