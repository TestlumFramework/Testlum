//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2022.05.31 at 08:19:32 PM EEST 
//


package com.knubisoft.e2e.testing.model.global_config;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * Browser Settings Specification (headless gpu etc)
 * 
 * <p>Java class for webDriverSettings complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="webDriverSettings"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="takeScreenshotOfEachUiCommand" type="{http://www.knubisoft.com/e2e/testing/model/global-config}takeScreenshotOfEachUiCommand"/&gt;
 *         &lt;element name="webElementAutowait" type="{http://www.knubisoft.com/e2e/testing/model/global-config}webElementAutowait"/&gt;
 *         &lt;element name="webDriverRunMode" type="{http://www.knubisoft.com/e2e/testing/model/global-config}webDriverRunMode"/&gt;
 *         &lt;element name="browserVersions" type="{http://www.knubisoft.com/e2e/testing/model/global-config}browserVersions"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "webDriverSettings", propOrder = {
    "takeScreenshotOfEachUiCommand",
    "webElementAutowait",
    "webDriverRunMode",
    "browserVersions"
})
public class WebDriverSettings {

    @XmlElement(required = true)
    protected TakeScreenshotOfEachUiCommand takeScreenshotOfEachUiCommand;
    @XmlElement(required = true)
    protected WebElementAutowait webElementAutowait;
    @XmlElement(required = true)
    protected WebDriverRunMode webDriverRunMode;
    @XmlElement(required = true)
    protected BrowserVersions browserVersions;

    /**
     * Gets the value of the takeScreenshotOfEachUiCommand property.
     * 
     * @return
     *     possible object is
     *     {@link TakeScreenshotOfEachUiCommand }
     *     
     */
    public TakeScreenshotOfEachUiCommand getTakeScreenshotOfEachUiCommand() {
        return takeScreenshotOfEachUiCommand;
    }

    /**
     * Sets the value of the takeScreenshotOfEachUiCommand property.
     * 
     * @param value
     *     allowed object is
     *     {@link TakeScreenshotOfEachUiCommand }
     *     
     */
    public void setTakeScreenshotOfEachUiCommand(TakeScreenshotOfEachUiCommand value) {
        this.takeScreenshotOfEachUiCommand = value;
    }

    /**
     * Gets the value of the webElementAutowait property.
     * 
     * @return
     *     possible object is
     *     {@link WebElementAutowait }
     *     
     */
    public WebElementAutowait getWebElementAutowait() {
        return webElementAutowait;
    }

    /**
     * Sets the value of the webElementAutowait property.
     * 
     * @param value
     *     allowed object is
     *     {@link WebElementAutowait }
     *     
     */
    public void setWebElementAutowait(WebElementAutowait value) {
        this.webElementAutowait = value;
    }

    /**
     * Gets the value of the webDriverRunMode property.
     * 
     * @return
     *     possible object is
     *     {@link WebDriverRunMode }
     *     
     */
    public WebDriverRunMode getWebDriverRunMode() {
        return webDriverRunMode;
    }

    /**
     * Sets the value of the webDriverRunMode property.
     * 
     * @param value
     *     allowed object is
     *     {@link WebDriverRunMode }
     *     
     */
    public void setWebDriverRunMode(WebDriverRunMode value) {
        this.webDriverRunMode = value;
    }

    /**
     * Gets the value of the browserVersions property.
     * 
     * @return
     *     possible object is
     *     {@link BrowserVersions }
     *     
     */
    public BrowserVersions getBrowserVersions() {
        return browserVersions;
    }

    /**
     * Sets the value of the browserVersions property.
     * 
     * @param value
     *     allowed object is
     *     {@link BrowserVersions }
     *     
     */
    public void setBrowserVersions(BrowserVersions value) {
        this.browserVersions = value;
    }

}
