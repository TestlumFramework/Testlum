//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2022.06.09 at 07:56:34 PM EEST 
//


package com.knubisoft.e2e.testing.model.scenario;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for auth complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="auth"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.knubisoft.com/e2e/testing/model/scenario}abstractCommand"&gt;
 *       &lt;choice maxOccurs="unbounded"&gt;
 *         &lt;element name="include" type="{http://www.knubisoft.com/e2e/testing/model/scenario}include"/&gt;
 *         &lt;element name="auth" type="{http://www.knubisoft.com/e2e/testing/model/scenario}auth"/&gt;
 *         &lt;element name="repeat" type="{http://www.knubisoft.com/e2e/testing/model/scenario}repeat"/&gt;
 *         &lt;element name="ui" type="{http://www.knubisoft.com/e2e/testing/model/scenario}ui"/&gt;
 *         &lt;element name="http" type="{http://www.knubisoft.com/e2e/testing/model/scenario}http"/&gt;
 *         &lt;element name="migrate" type="{http://www.knubisoft.com/e2e/testing/model/scenario}migrate"/&gt;
 *         &lt;element name="postgres" type="{http://www.knubisoft.com/e2e/testing/model/scenario}postgres"/&gt;
 *         &lt;element name="mysql" type="{http://www.knubisoft.com/e2e/testing/model/scenario}mysql"/&gt;
 *         &lt;element name="var" type="{http://www.knubisoft.com/e2e/testing/model/scenario}var"/&gt;
 *         &lt;element name="wait" type="{http://www.knubisoft.com/e2e/testing/model/scenario}wait"/&gt;
 *         &lt;element name="invoke" type="{http://www.knubisoft.com/e2e/testing/model/scenario}invoke"/&gt;
 *         &lt;element name="excel" type="{http://www.knubisoft.com/e2e/testing/model/scenario}excelCommands"/&gt;
 *         &lt;element name="csv" type="{http://www.knubisoft.com/e2e/testing/model/scenario}csvCommands"/&gt;
 *       &lt;/choice&gt;
 *       &lt;attribute name="credentials" use="required" type="{http://www.knubisoft.com/e2e/testing/model/scenario}nonEmptyString" /&gt;
 *       &lt;attribute name="alias" use="required" type="{http://www.knubisoft.com/e2e/testing/model/scenario}nonEmptyString" /&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "auth", propOrder = {
    "commands"
})
public class Auth
    extends AbstractCommand
{

    @XmlElements({
        @XmlElement(name = "include", type = Include.class),
        @XmlElement(name = "auth", type = Auth.class),
        @XmlElement(name = "repeat", type = Repeat.class),
        @XmlElement(name = "ui", type = Ui.class),
        @XmlElement(name = "http", type = Http.class),
        @XmlElement(name = "migrate", type = Migrate.class),
        @XmlElement(name = "postgres", type = Postgres.class),
        @XmlElement(name = "mysql", type = Mysql.class),
        @XmlElement(name = "var", type = Var.class),
        @XmlElement(name = "wait", type = Wait.class),
        @XmlElement(name = "invoke", type = Invoke.class),
        @XmlElement(name = "excel", type = ExcelCommands.class),
        @XmlElement(name = "csv", type = CsvCommands.class)
    })
    protected List<AbstractCommand> commands;
    @XmlAttribute(name = "credentials", required = true)
    protected String credentials;
    @XmlAttribute(name = "alias", required = true)
    protected String alias;

    /**
     * Gets the value of the commands property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the commands property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCommands().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Include }
     * {@link Auth }
     * {@link Repeat }
     * {@link Ui }
     * {@link Http }
     * {@link Migrate }
     * {@link Postgres }
     * {@link Mysql }
     * {@link Var }
     * {@link Wait }
     * {@link Invoke }
     * {@link ExcelCommands }
     * {@link CsvCommands }
     * 
     * 
     */
    public List<AbstractCommand> getCommands() {
        if (commands == null) {
            commands = new ArrayList<AbstractCommand>();
        }
        return this.commands;
    }

    /**
     * Gets the value of the credentials property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCredentials() {
        return credentials;
    }

    /**
     * Sets the value of the credentials property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCredentials(String value) {
        this.credentials = value;
    }

    /**
     * Gets the value of the alias property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAlias() {
        return alias;
    }

    /**
     * Sets the value of the alias property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAlias(String value) {
        this.alias = value;
    }

}
