//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2022.05.21 at 08:42:19 PM EEST 
//


package com.knubisoft.e2e.testing.model.scenario;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ui complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ui"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.knubisoft.com/e2e/testing/model/scenario}abstractCommand"&gt;
 *       &lt;choice maxOccurs="unbounded"&gt;
 *         &lt;element name="click" type="{http://www.knubisoft.com/e2e/testing/model/scenario}click"/&gt;
 *         &lt;element name="input" type="{http://www.knubisoft.com/e2e/testing/model/scenario}input"/&gt;
 *         &lt;element name="navigateBack" type="{http://www.knubisoft.com/e2e/testing/model/scenario}navigateBack"/&gt;
 *         &lt;element name="navigateReload" type="{http://www.knubisoft.com/e2e/testing/model/scenario}navigateReload"/&gt;
 *         &lt;element name="navigateTo" type="{http://www.knubisoft.com/e2e/testing/model/scenario}navigateTo"/&gt;
 *         &lt;element name="assert" type="{http://www.knubisoft.com/e2e/testing/model/scenario}assert"/&gt;
 *         &lt;element name="selectDropDown" type="{http://www.knubisoft.com/e2e/testing/model/scenario}selectDropDown"/&gt;
 *         &lt;element name="deselectDropDown" type="{http://www.knubisoft.com/e2e/testing/model/scenario}deselectDropDown"/&gt;
 *         &lt;element name="deselectDropDownAll" type="{http://www.knubisoft.com/e2e/testing/model/scenario}deselectDropDownAll"/&gt;
 *         &lt;element name="javascript" type="{http://www.knubisoft.com/e2e/testing/model/scenario}javascript"/&gt;
 *       &lt;/choice&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ui", propOrder = {
    "clickOrInputOrNavigateBack"
})
public class Ui
    extends AbstractCommand
{

    @XmlElements({
        @XmlElement(name = "click", type = Click.class),
        @XmlElement(name = "input", type = Input.class),
        @XmlElement(name = "navigateBack", type = NavigateBack.class),
        @XmlElement(name = "navigateReload", type = NavigateReload.class),
        @XmlElement(name = "navigateTo", type = NavigateTo.class),
        @XmlElement(name = "assert", type = Assert.class),
        @XmlElement(name = "selectDropDown", type = SelectDropDown.class),
        @XmlElement(name = "deselectDropDown", type = DeselectDropDown.class),
        @XmlElement(name = "deselectDropDownAll", type = DeselectDropDownAll.class),
        @XmlElement(name = "javascript", type = Javascript.class)
    })
    protected List<AbstractCommand> clickOrInputOrNavigateBack;

    /**
     * Gets the value of the clickOrInputOrNavigateBack property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the clickOrInputOrNavigateBack property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getClickOrInputOrNavigateBack().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Click }
     * {@link Input }
     * {@link NavigateBack }
     * {@link NavigateReload }
     * {@link NavigateTo }
     * {@link Assert }
     * {@link SelectDropDown }
     * {@link DeselectDropDown }
     * {@link DeselectDropDownAll }
     * {@link Javascript }
     * 
     * 
     */
    public List<AbstractCommand> getClickOrInputOrNavigateBack() {
        if (clickOrInputOrNavigateBack == null) {
            clickOrInputOrNavigateBack = new ArrayList<AbstractCommand>();
        }
        return this.clickOrInputOrNavigateBack;
    }

}
