<scenario xmlns="http://www.knubisoft.com/e2e/testing/model/scenario" active="false">
    <overview>
        <description>Test for auth command</description>
        <name>Auth command self test</name>
        <developer>Vadim Morev</developer>
    </overview>

    <tags>
        <tag>all</tag>
    </tags>

    <migrate comment="Add user and initial data for test" alias="central">
        <patches>central_required.sql</patches>
        <patches>central_email_templates.sql</patches>
    </migrate>

    <http comment="#2 Registration of a new user" alias="api">
        <post url="api/v1/registration/register">
            <response code="200" file="expected_2.json"/>
            <body>
                <param name="firstName" data="Ruslan"/>
                <param name="lastName" data="Konovalov"/>
                <param name="email" data="konovalovtest19@gmail.com"/>
                <param name="password" data="Qwerty12@"/>
                <param name="termsAndConditionVersion" data="1"/>
            </body>
        </post>
    </http>
    <postgres comment="Check for a one-time token in the 'one_time_token table'" file="expected_3.json"
              alias="central">
        <query>SELECT token, user_id FROM t_temp_user_one_time_token WHERE user_id IN
            (SELECT id FROM t_temp_user WHERE email = 'konovalovtest19@gmail.com')
        </query>
    </postgres>

    <var comment="Create a variable for the email verification token" name='TOKEN_EMAIL'>
        <jpath>$.[0].content.[0].token</jpath>
    </var>

    <http comment="Sending an email verification token to the email confirmation page"
          alias="api">
        <post url="/api/v1/registration/verifyEmail">
            <response code="200" file="expected_5.json"/>
            <body>
                <param name="code" data="{{TOKEN_EMAIL}}"/>
            </body>
        </post>
    </http>

    <var comment="Create a variable for jvt token" name='TOKEN_JWT'>
        <jpath>$.body.token</jpath>
    </var>

    <http comment="Send a valid phone number to receive an SMS token"
          alias="api">
        <post url="/api/v1/registration/addPhoneAndSendOtp">
            <response code="200" file="expected_7.json"/>
            <header name="Authorization" data="Bearer {{TOKEN_JWT}}"/>
            <body>
                <param name="phoneNumber" data="+380992326722"/>
            </body>
        </post>
    </http>

    <postgres comment="Check for the presence of a token to confirm the phone number in the database"
              file="expected_8.json" alias="central">
        <query>SELECT token, user_id FROM t_temp_user_one_time_token WHERE user_id IN
            (SELECT id from t_temp_user where email = 'konovalovtest19@gmail.com') and type = 'SMS_VERIFICATION'
        </query>
    </postgres>

    <var comment="Create a variable for sms token" name='SMSTOKEN'>
        <jpath>$.[0].content.[0].token</jpath>
    </var>

    <http comment="Submit a code with a valid token"
          alias="api">
        <post url="/api/v1/registration/phoneVerify">
            <response code="200" file="expected_10.json"/>
            <header name="Authorization" data="Bearer {{TOKEN_JWT}}"/>
            <body>
                <param name="code" data="{{SMSTOKEN}}"/>
            </body>
        </post>
    </http>

    <http comment="Check ability successful add 'Firm information'"
          alias="api">
        <post url="/api/v1/company">
            <response code="200" file="expected_11.json"/>
            <header name="Authorization" data="Bearer {{TOKEN_JWT}}"/>
            <body>
                <param name="firmName" data="Lawyer Company"/>
                <param name="country" data="United State"/>
                <param name="state" data="California"/>
                <param name="city" data="Los Angeles"/>
                <param name="firstAddress" data="11845 W Olympic Blvd 800, Los Angeles, CA 90064,"/>
                <param name="secondAddress" data="11845 W Olympic Blvd 800, Los Angeles, CA 90064,"/>
                <param name="postCode" data="30025"/>
            </body>
        </post>
    </http>

    <auth comment="Start auth command " credentials="user_owner.json" alias="api">

        <navigateTo comment="go to dashboard" path="/contacts"/>

        <assert comment="Assert auth command successfully works"
                locatorId="dashboard.dashBoardTitle"
                attribute="outerHTML">
            <content>
                <![CDATA[<divdata-v-7d622f5c=""class="holder-logo"><adata-v-7d622f5c=""class="logo"><imgdata-v-7d622f5c=""src="/img/pme-logo.f9dd7485.svg"alt="logo"></a></div>]]></content>
        </assert>
    </auth>

</scenario>