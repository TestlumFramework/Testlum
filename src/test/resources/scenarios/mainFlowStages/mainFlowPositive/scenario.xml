<scenario xmlns="http://www.knubisoft.com/e2e/testing/model/scenario">

    <overview>
        <description>Check successful registration on "pme"</description>
        <name>Registration main flow</name>
    </overview>

    <tags>
        <tag>Frontend</tag>
    </tags>

    <migrate comment="Add public pages" alias="central">
        <patches>central_required.sql</patches>
        <patches>central_email_templates.sql</patches>
    </migrate>

    <http comment="Clear cash for successful start scenario"
          alias="api">
        <post url="/api/v1/cache/invalidate"/>
    </http>

    <ui comment="First part of ui commands">
        <click comment="Click on Registration button"
               locatorId="mainPage.register"/>

        <input comment="Input first name"
               locatorId="ownerRegistration.firstName"
               value="Roberto"/>

        <input comment="Input lastname"
               locatorId="ownerRegistration.lastName"
               value="Firmino"/>

        <input comment="Input email"
               locatorId="ownerRegistration.emailAddress"
               value="konovalovtest19@gmail.com"/>

        <input comment="Input password"
               locatorId="ownerRegistration.password"
               value="Firm@nino19"/>

        <input comment="Input repeat password"
               locatorId="ownerRegistration.repPassword"
               value="Firm@nino19"/>

        <click comment="Click on 'confirm' 'Terms of use' and 'Privacy Policy' button"
               locatorId="ownerRegistration.confirm"/>

        <click comment="Click on 'Register account' button"
               locatorId="ownerRegistration.regAccount"
               method="js"/>
    </ui>

    <wait comment="Waiting of loading the 2Fa auth page"
          time="3"
          unit="seconds"/>

    <ui comment="Assert command">
        <assert comment="Go to 2Fa page"
                locatorId="ownerRegistration.positiveAssertOwner"
                attribute="id">
            <content>home_header_button</content>
        </assert>
    </ui>

    <postgres comment="Get token and user_id from t_one_time_token table"
              file="expected_13.json"
              alias="central">
        <query>SELECT token, user_id FROM t_temp_user_one_time_token ORDER BY ID DESC LIMIT 1</query>
    </postgres>

    <var comment="Created token var" name="TOKEN">
        <jpath>$.[0].content.[0].token</jpath>
    </var>

    <var comment="Created user id var" name="USER_ID">
        <jpath>$.[0].content.[0].user_id</jpath>
    </var>

    <ui comment="Second part of ui command">
        <navigateTo comment="Emulate press on verify link button on email"
                    path="/register/phone-verify/{{TOKEN}}"/>

        <assert comment="Make sure that the transition to the 2Fa page was successful"
                locatorId="ownerRegistration.assertTwoFaPositive"
                attribute="id">
            <content>register_phone-resend_button</content>
        </assert>

        <click comment="Click on select country"
               locatorId="twoFactor.selectCountryFa"/>

        <click comment="Select Ukraine"
               locatorId="twoFactor.selectUkraine"/>

        <input highlight="false"
               comment="Input phone number"
               locatorId="twoFactor.phoneNumber"
               value="966576650"/>

        <click comment="Click on 'Send code'"
               locatorId="twoFactor.sandCode"/>
    </ui>

    <wait comment="Wait 5 seconds before starting set values in fields"
          time="5"
          unit="seconds"/>

    <postgres comment="Get token and user_id from t_one_time_token table"
              file="expected_23.json"
              alias="central">
        <query>SELECT token, user_id FROM t_temp_user_one_time_token ORDER BY ID DESC LIMIT 1</query>
    </postgres>

    <var comment="Created token var" name="ORIGINAL_TOKEN">
        <jpath>$.[0].content.[0].token</jpath>
    </var>

    <var comment="Created token var" name="TOKEN">
        <value>"{{ORIGINAL_TOKEN}}"</value>
    </var>

    <var comment="Variable expression result" name="firstTokenDigit">
        <expression>{{TOKEN}}.toString().charAt(0)</expression>
    </var>

    <var comment="Variable expression result" name="secondTokenDigit">
        <expression>{{TOKEN}}.toString().charAt(1)</expression>
    </var>

    <var comment="Variable expression result" name="thirdTokenDigit">
        <expression>{{TOKEN}}.toString().charAt(2)</expression>
    </var>

    <var comment="Variable expression result" name="fourthTokenDigit">
        <expression>{{TOKEN}}.toString().charAt(3)</expression>
    </var>

    <var comment="Variable expression result" name="fifthTokenDigit">
        <expression>{{TOKEN}}.toString().charAt(4)</expression>
    </var>

    <var comment="Variable expression result" name="sixthTokenDigit">
        <expression>{{TOKEN}}.toString().charAt(5)</expression>
    </var>

    <var comment="Created user id var" name="USER_ID">
        <jpath>$.[0].content.[0].user_id</jpath>
    </var>

    <wait comment="Wait 3 seconds before starting set values in fields"
          time="3"
          unit="seconds"/>

    <ui comment="Third part of ui commands">
        <input comment="Input verification code1"
               locatorId="twoFactor.enterCode1"
               value="{{firstTokenDigit}}"/>

        <input comment="Input verification code2"
               locatorId="twoFactor.enterCode2"
               value="{{secondTokenDigit}}"/>

        <input comment="Input verification code3"
               locatorId="twoFactor.enterCode3"
               value="{{thirdTokenDigit}}"/>

        <input comment="Input verification code4"
               locatorId="twoFactor.enterCode4"
               value="{{fourthTokenDigit}}"/>

        <input comment="Input verification code5"
               locatorId="twoFactor.enterCode5"
               value="{{fifthTokenDigit}}"/>

        <input comment="Input verification code6"
               locatorId="twoFactor.enterCode6"
               value="{{sixthTokenDigit}}"/>
    </ui>

    <wait comment="Wait one second for a request to check the correct response code"
          time="1" unit="seconds"/>

    <ui comment="Click command">
        <click comment="Click on Sand password button"
               locatorId="twoFactor.sandPass"/>
    </ui>

    <wait comment="Waiting 1 second for loaded field name-input"
          time="1"
          unit="seconds"/>

    <ui comment="Fourth part of ui commands">
        <assert comment="Assert go to page 'Register Firm account'"
                locatorId="twoFactor.assertPositiveTwoFa"
                attribute="id">
            <content>register_firm-registration-name_input</content>
        </assert>

        <input comment="Input 'Firm Name'"
               locatorId="firmRegistration.firmName"
               value="Hubbard Company"/>

        <click comment=" Click to Select country"
               locatorId="firmRegistration.country"/>
    </ui>

    <wait comment="Loading select input country"
          time="2" unit="seconds"/>

    <ui comment="Fifth part of ui commands">
        <click comment="Select United States"
               locatorId="firmRegistration.selectCountry"/>

        <click comment="Click to Select City"
               locatorId="firmRegistration.city"/>
    </ui>

    <wait comment="Loading select input city"
          time="2" unit="seconds"/>

    <ui comment="Sixth part of ui commands">
        <click comment="Select California"
               locatorId="firmRegistration.selectCity"/>

        <click comment="Click to Select State"
               locatorId="firmRegistration.state"/>
    </ui>

    <wait comment="Loading select input state"
          time="4" unit="seconds"/>

    <ui comment="Seventh part of ui commands">
        <click comment="Select State 'Los Angeles'"
               locatorId="firmRegistration.selectState"/>

        <input comment="Input Firm address1"
               locatorId="firmRegistration.firmAddress1"
               value="S Figueroa St Los Angeles CA United States"/>

        <input comment="Input Firm Address2"
               locatorId="firmRegistration.firmAddress2"
               value="Vista Del Mar,Playa Del Rey United States"/>

        <input comment="Input 'Postcode'"
               locatorId="firmRegistration.postcode"
               value="90032"/>

        <click comment="Click on 'Confirm' button"
               locatorId="firmRegistration.confirmFirm"/>
    </ui>

    <wait comment="Waiting for loading billing page"
          time="7" unit="seconds"/>

    <ui comment="Eighth part of ui commands">
        <assert comment="Checking the available, adding the value into the postcode field"
                locatorId="firmRegistration.firmRegisterPositiveAssert"
                attribute="id">
            <content>register_card_button</content>
        </assert>

        <input comment="Add card number"
               locatorId="billing.cardNumber"
               value="4149439398767754"/>

        <input comment="Add card name on card"
               locatorId="billing.nameOnCard"
               value="Roberto Firmino"/>

        <click comment="Choose 'exp date' month"
               locatorId="billing.expDateMonth"/>
    </ui>

    <wait comment="Loading select input Month"
          time="2" unit="seconds"/>

    <ui comment="Ninth part of ui commands">
        <click comment="Choose month"
               locatorId="billing.january"/>

        <click comment="Choose 'exp date' Year"
               locatorId="billing.expDateYear"/>

        <click comment="Choose Year"
               locatorId="billing.chooseYear"/>

        <input comment="Add cvc code"
               locatorId="billing.cvc"
               value="777"/>

        <click comment="Click on confirm button"
               locatorId="billing.confirmButton"/>
    </ui>

    <wait comment="Wait 2 second's for loading Add Profile Photo page"
          time="2" unit="seconds"/>

    <ui comment="Assert command">
        <assert comment="We go to Add Profile Photo page"
                locatorId="billing.billingPositiveAssert"
                attribute="id">
            <content>register_profile-photo_input</content>
        </assert>
    </ui>

    <wait comment="Loading select input Year"
          time="2" unit="seconds"/>

    <ui comment="Tenth part of ui command">
        <input comment="Add profile photo"
               locatorId="userPhoto.addProfilePhotoButton"
               value="file:Firmino.jpg"/>

        <click comment="Click confirm button"
               locatorId="userPhoto.confirmButton"/>
    </ui>

    <wait comment="Waiting for loading Dashboard page"
          time="1" unit="seconds"/>

    <ui comment="Assert command">
        <assert comment="We go to Dashboard page"
                locatorId="dashboard.dashBoardTitle"
                attribute="class">
            <content>holder-logo</content>
        </assert>
    </ui>

    <wait comment="Waiting for loading Dashboard page"
          time="1" unit="seconds"/>


    <var comment="Get new db name" name="tenant2">
        <postgresResult comment="Query for new db name" databaseName="central">
            <query>SELECT database_name
                FROM t_tenant WHERE company_name='Hubbard Company'</query>
        </postgresResult>
    </var>

    <postgres comment="get all tables" alias="{{tenant2}}" file="expected_78.json">
        <query>SELECT email FROM t_user WHERE first_name = 'Roberto'</query>
    </postgres>
</scenario>




