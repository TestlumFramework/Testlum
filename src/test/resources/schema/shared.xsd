<?xml version="1.0" encoding="UTF-8"?>
<x:schema xmlns:x="http://www.w3.org/2001/XMLSchema"
          targetNamespace="http://www.knubisoft.com/cott/testing/model/scenario"
          xmlns:tns="http://www.knubisoft.com/cott/testing/model/scenario"
          elementFormDefault="qualified"
          xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" jaxb:version="2.1">

    <x:complexType name="commandWithLocator" abstract="true">
        <x:complexContent>
            <x:extension base="tns:abstractUiCommand">
                <x:attribute name="locatorId" type="tns:scenarioLocator" use="required"/>
            </x:extension>
        </x:complexContent>
    </x:complexType>

    <x:complexType name="commandWithOptionalLocator" abstract="true">
        <x:complexContent>
            <x:extension base="tns:abstractUiCommand">
                <x:attribute name="locatorId" type="tns:scenarioLocator"/>
            </x:extension>
        </x:complexContent>
    </x:complexType>

    <x:complexType name="abstractCommand" abstract="true">
        <x:attribute name="comment" type="tns:stringMin10" use="required"/>
        <x:attribute name="threshold" type="x:int"/>
        <x:attribute name="condition" type="tns:nonEmptyString"/>
    </x:complexType>

    <x:complexType name="ui" abstract="true">
        <x:complexContent>
            <x:extension base="tns:abstractCommand"/>
        </x:complexContent>
    </x:complexType>

    <x:complexType name="abstractUiCommand" abstract="true">
        <x:complexContent>
            <x:extension base="tns:abstractCommand"/>
        </x:complexContent>
    </x:complexType>

    <x:simpleType name="nonEmptyString">
        <x:restriction base="x:string">
            <x:minLength value="1"/>
<!--            <x:pattern value="\S(.*\S)?"/>-->
        </x:restriction>
    </x:simpleType>

    <x:simpleType name="stringWithoutSpacesPattern">
        <x:restriction base="x:string">
            <x:pattern value="\S+"/>
        </x:restriction>
    </x:simpleType>

    <x:simpleType name="expectedPattern">
        <x:restriction base="x:string">
            <x:pattern value="expected_\d+.json"/>
        </x:restriction>
    </x:simpleType>

    <x:simpleType name="bodyFile">
        <x:restriction base="x:string">
            <x:pattern value="body_\d+.json"/>
        </x:restriction>
    </x:simpleType>

    <x:simpleType name="stringMin10">
        <x:restriction base="x:string">
            <x:minLength value="10"/>
        </x:restriction>
    </x:simpleType>

    <x:simpleType name="stringMin1">
        <x:restriction base="x:string">
            <x:minLength value="1"/>
        </x:restriction>
    </x:simpleType>

    <x:simpleType name="stringMin30">
        <x:restriction base="x:string">
            <x:minLength value="30"/>
        </x:restriction>
    </x:simpleType>

    <x:complexType name="response">
        <x:sequence>
            <x:element name="header" type="tns:header" minOccurs="0" maxOccurs="unbounded"/>
        </x:sequence>
        <x:attribute name="code" type="tns:codePattern" default="200"/>
        <x:attribute name="file" type="tns:expectedPattern"/>
    </x:complexType>

    <x:complexType name="body">
        <x:choice>
            <x:element name="param" type="tns:param" minOccurs="0" maxOccurs="unbounded"/>
            <x:element name="multipart" type="tns:multipart" minOccurs="0"/>
            <x:element name="from" type="tns:file" minOccurs="0"/>
            <x:element name="raw" type="x:string" minOccurs="0"/>
        </x:choice>
    </x:complexType>

    <x:complexType name="param">
        <x:simpleContent>
            <x:extension base="x:string">
                <x:attribute name="name" type="tns:nonEmptyString" use="required"/>
                <x:attribute name="data" type="x:string" use="required"/>
            </x:extension>
        </x:simpleContent>
    </x:complexType>

    <x:complexType name="multipart">
        <x:simpleContent>
            <x:extension base="x:string">
                <x:attribute name="name" type="tns:nonEmptyString" use="required"/>
                <x:attribute name="path" type="tns:nonEmptyString" use="required"/>
                <x:attribute name="fileName" type="tns:nonEmptyString"/>
            </x:extension>
        </x:simpleContent>
    </x:complexType>

    <x:complexType name="header">
        <x:simpleContent>
            <x:extension base="x:string">
                <x:attribute name="name" type="tns:headerName" use="required"/>
                <x:attribute name="data" type="x:string" use="required"/>
            </x:extension>
        </x:simpleContent>
    </x:complexType>

    <x:simpleType name="headerName" final="restriction">
        <x:restriction base="x:string">
            <x:pattern value="[a-zA-Z\-]+"/>
        </x:restriction>
    </x:simpleType>

    <x:complexType name="file">
        <x:attribute name="file" type="tns:jsonFileExtension" use="required"/>
    </x:complexType>

    <x:simpleType name="codePattern" final="restriction">
        <x:restriction base="x:int">
            <x:pattern value="[2-5]\d{2}"/>
        </x:restriction>
    </x:simpleType>

    <x:simpleType name="jsFileExtension">
        <x:restriction base="x:string">
            <x:pattern value=".+(\.js)"/>
        </x:restriction>
    </x:simpleType>
    <x:simpleType name="jsonFileExtension">
        <x:restriction base="x:string">
            <x:pattern value=".+(\.json)"/>
        </x:restriction>
    </x:simpleType>

    <x:simpleType name="imageExtension">
        <x:restriction base="x:string">
            <x:pattern value=".+(\.(jpg|jpeg|png|JPG|JPEG|PNG|))"/>
        </x:restriction>
    </x:simpleType>

    <x:simpleType name="scenarioLocator">
        <x:restriction base="x:string">
            <x:pattern value="([a-z0-9]+[A-Z]?[a-z0-9]?)*\.([a-z0-9]+[A-Z]?[a-z0-9]?)*"/>
        </x:restriction>
    </x:simpleType>

    <x:simpleType name="aliasPattern">
        <x:restriction base="x:string">
            <x:pattern value="[a-zA-Z_\-/\d]+"/>
        </x:restriction>
    </x:simpleType>

    <x:simpleType name="endpointPattern">
        <x:restriction base="x:string">
            <x:minLength value="2"/>
            <x:pattern value="(/[^/].+)"/>
        </x:restriction>
    </x:simpleType>

    <x:simpleType name="sqlFileExtension">
        <x:restriction base="x:string">
            <x:pattern value="[a-zA-Z\d_]+\.sql"/>
        </x:restriction>
    </x:simpleType>

    <x:simpleType name="timePattern">
        <x:restriction base="x:string">
            <x:pattern value="\d+|\{{2}([a-zA-Z\d_\-]+)\}{2}"/>
        </x:restriction>
    </x:simpleType>

    <x:simpleType name="tabPattern">
        <x:restriction base="x:int">
            <x:pattern value="[2-9]|[1-9][0-9]"/>
        </x:restriction>
    </x:simpleType>

    <x:group name="generalVarType">
        <x:choice>
            <x:element name="file" type="tns:fromFile"/>
            <x:element name="path" type="tns:fromPath"/>
            <x:element name="expression" type="tns:fromExpression"/>
            <x:element name="sql" type="tns:fromSQL"/>
        </x:choice>
    </x:group>

    <x:complexType name="fromFile">
        <x:attribute name="fileName" type="tns:nonEmptyString" use="required"/>
    </x:complexType>

    <x:complexType name="fromPath">
        <x:attribute name="value" type="tns:xjpathPattern" use="required"/>
    </x:complexType>

    <x:simpleType name="xjpathPattern">
        <x:restriction base="x:string">
            <x:pattern value="/.+|\$.+"/>
        </x:restriction>
    </x:simpleType>

    <x:complexType name="fromExpression">
        <x:attribute name="value" type="tns:nonEmptyString" use="required"/>
    </x:complexType>

    <x:complexType name="fromCookie"/>

    <x:complexType name="fromUrl"/>

    <x:complexType name="fromDom">
        <x:attribute name="xpath" type="tns:xpathPattern"/>
    </x:complexType>

    <x:simpleType name="xpathPattern">
        <x:restriction base="x:string">
            <x:pattern value="/.+"/>
        </x:restriction>
    </x:simpleType>

    <x:complexType name="fromSQL">
        <x:sequence>
            <x:element name="query" type="tns:variableQuery"/>
        </x:sequence>
        <x:attribute name="dbType" type="tns:relationalDB" use="required"/>
        <x:attribute name="alias" type="tns:aliasPattern" use="required"/>
    </x:complexType>

    <x:simpleType name="variableQuery">
        <x:restriction base="x:string">
            <x:pattern value="(\s|\n)*SELECT([^\*,]|\n)+FROM(.|\n)+WHERE(.|\n)+"/>
        </x:restriction>
    </x:simpleType>

    <x:simpleType name="relationalDB">
        <x:restriction base="x:string">
            <x:enumeration value="POSTGRES"/>
            <x:enumeration value="MYSQL"/>
            <x:enumeration value="ORACLE"/>
            <x:enumeration value="CLICKHOUSE"/>
        </x:restriction>
    </x:simpleType>

</x:schema>
