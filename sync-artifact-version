#!/bin/bash

set -e

ROOT_POM="./pom.xml"

if [[ ! -f "$ROOT_POM" ]]; then
  echo "‚ùå Root pom.xml not found!"
  exit 1
fi

# --- Extract version from root POM
ROOT_VERSION=$(awk '
  BEGIN { inProject = 0 }
  /<project/ { inProject = 1 }
  /<\/project>/ { inProject = 0 }
  {
    if (inProject && $0 ~ /<version>[^<]+<\/version>/) {
      gsub(/^ +/, "", $0)
      gsub(/.*<version>/, "", $0)
      gsub(/<\/version>.*/, "", $0)
      print $0
      exit
    }
  }
' "$ROOT_POM")

if [[ -z "$ROOT_VERSION" ]]; then
  echo "‚ùå Failed to extract version from root pom.xml"
  exit 1
fi

echo "üîç Root version: $ROOT_VERSION"

# --- Update version in child POMs
find . -name "pom.xml" ! -path "./pom.xml" | while read -r pom; do
  echo "üìù Updating parent version in $pom"
  awk -v newVersion="$ROOT_VERSION" '
    BEGIN { inParent = 0 }
    /<parent>/ { inParent = 1 }
    /<\/parent>/ { inParent = 0 }
    {
      if (inParent && $0 ~ /<version>.*<\/version>/) {
        sub(/<version>.*<\/version>/, "<version>" newVersion "</version>")
      }
      print
    }
  ' "$pom" > "$pom.tmp" && mv "$pom.tmp" "$pom"
done

# --- Update version in Dockerfile and Dockerfile.jenkins
FILES=("Dockerfile" "Dockerfile.jenkins")
for file in "${FILES[@]}"; do
  if [[ -f $file ]]; then
    echo "üê≥ Updating JAR version in $file"
    sed -E -i.bak "s/(testlum-)[0-9]+\.[0-9]+(\.[0-9]+)?(\.jar)/\1${ROOT_VERSION}\3/" "$file"
    rm "$file.bak"
  else
    echo "‚ö†Ô∏è $file not found, skipping..."
  fi
done

echo "‚úÖ All done! Synced version to $ROOT_VERSION"